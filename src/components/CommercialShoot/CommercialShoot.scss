@use "../../styles/utils/breakepoints" as bp;
@use "../../styles/utils/functions" as u;
@use "../../styles/variables" as vars;

.commercial_shoot {
  &__image_grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);

    @include bp.breakpoint(large) {
      grid-template-columns: 1fr 1fr 1fr 1fr 1fr 100px 2fr 100px 1fr 1fr 1fr 1fr 1fr;
      grid-template-rows: 400px 300px;
    }

    & > img:not(.commercial_shoot__bg_removed) {
      filter: grayscale(50%);
    }
  }

  &__logo {
    grid-column: 1/ 3;
    grid-row: 2 / 3;
    width: 100%;
    height: 100%;
    object-fit: contain;
    display: none;

    @include bp.breakpoint(large) {
      display: block;
      grid-column: 1 / 14;
      grid-row: 1 / 2;
    }
  }

  &__bg_removed {
    width: fit-content;
    grid-column: 1 / 3;
    z-index: 1000;  

    @include bp.breakpoint-range(large, xlarge) {
      grid-row: 1 / 3;
      grid-column: 5/ 10; 
    }

    @include bp.breakpoint(xlarge) {
      grid-row: 1 / 3;
      grid-column: 6/ 9;    
    }
  }

  &__1 {
    @include bp.breakpoint(large) {
      grid-column: 1 / 3;
      grid-row: 2 / 3;
    }
  }
  &__2 {
    @include bp.breakpoint(large) {
      grid-column: 3 / 5;
      grid-row: 2 / 3;
    }
  }
  &__3 {
    @include bp.breakpoint(large) {
      grid-column: 5 / 7;
      grid-row: 2 / 3;
    }
  }
  &__4 {
    @include bp.breakpoint(large) {
      grid-column: 8 / 10;
      grid-row: 2 / 3;
    }
  }
  &__5 {
    @include bp.breakpoint(large) {
      grid-column: 10 / 12;
      grid-row: 2 / 3;
    }
  }
  &__6 {
    @include bp.breakpoint(large) {
      grid-column: 12 / 14;
      grid-row: 2 / 3;
    }
  }
}
